{"version":3,"sources":["AlbumList.js","UserList.js","App.js","index.js"],"names":["AlbumList","user","useState","albums","setAlbums","useEffect","abortController","AbortController","a","id","fetch","signal","response","json","albumsFromAPI","name","console","log","loadAlbums","abort","map","album","index","title","UserList","users","setCurrentUser","className","type","onClick","App","setUsers","currentUser","usersFromAPI","loadUsers","ogTitle","document","ReactDOM","render","StrictMode","getElementById"],"mappings":"4RAkDeA,MAhDf,YAAmC,IAAD,IAAbC,YAAa,MAAN,GAAM,EAChC,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KA8BA,OA7BAC,qBAAU,WACR,IAAMC,EAAkB,IAAIC,gBADd,4CAEd,8BAAAC,EAAA,0DACMP,EAAKQ,GADX,0CAG6BC,MAAM,sDAAD,OAC4BT,EAAKQ,IAC3D,CAAEE,OAAQL,EAAgBK,SALlC,cAGYC,EAHZ,gBAQkCA,EAASC,OAR3C,OAQYC,EARZ,OASMV,EAAUU,GAThB,qDAWyB,eAAf,KAAMC,KAXhB,iBAYQC,QAAQC,IAAI,WAZpB,8FAFc,sBAwBd,OAxBc,mCAsBdC,GAEO,WACLZ,EAAgBa,WAEjB,CAAClB,IAEAA,EAAKQ,GAEL,gCACE,+BAAKR,EAAKc,KAAV,aACA,6BACGZ,EAAOiB,KAAI,SAACC,EAAOC,GAAR,OACV,+BACGD,EAAMZ,GADT,MACgBY,EAAME,QADbD,WAQZ,yEC1BME,MAnBf,YAA8C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,eACzB,OACE,oBAAIC,UAAU,YAAd,SACGF,EAAML,KAAI,SAACnB,GAAD,OACT,6BACE,wBACE2B,KAAK,SACLC,QAAS,WACPH,EAAezB,IAHnB,SAMGA,EAAKc,QAPDd,EAAKQ,UCgDPqB,MAhDf,WACE,MAA0B5B,mBAAS,IAAnC,mBAAOuB,EAAP,KAAcM,EAAd,KACA,EAAsC7B,mBAAS,IAA/C,mBAAO8B,EAAP,KAAoBN,EAApB,KAkCA,OAhCArB,qBAAU,WACR,IAAMC,EAAkB,IAAIC,gBADd,4CAEd,8BAAAC,EAAA,+EAE2BE,MACrB,6CACA,CAAEC,OAAQL,EAAgBK,SAJhC,cAEUC,EAFV,gBAM+BA,EAASC,OANxC,OAMUoB,EANV,OAOIF,EAASE,GAPb,qDASuB,eAAf,KAAMlB,KATd,iBAUMC,QAAQC,IAAI,WAVlB,8FAFc,0DAmBdiB,GAEA,IAAMC,EAAUC,SAASb,MAGzB,OAFAa,SAASb,MAAQ,oBAEV,WACLa,SAASb,MAAQY,EACjB7B,EAAgBa,WAEjB,IAKD,sBAAKQ,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CAAUF,MAAOA,EAAOC,eAAgBA,MAE1C,qBAAKC,UAAU,eAAf,SACE,cAAC,EAAD,CAAW1B,KAAM+B,UC5CzBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFH,SAASI,eAAe,W","file":"static/js/main.8e52dee3.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction AlbumList({ user = {} }) {\n  const [albums, setAlbums] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function loadAlbums() {\n      if (user.id) {\n        try {\n          const response = await fetch(\n            `https://jsonplaceholder.typicode.com/albums?userId=${user.id}`,\n            { signal: abortController.signal }\n          );\n\n          const albumsFromAPI = await response.json();\n          setAlbums(albumsFromAPI);\n        } catch (error) {\n          if (error.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            throw error;\n          }\n        }\n      }\n    }\n\n    loadAlbums();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [user]);\n\n  if (user.id) {\n    return (\n      <div>\n        <h2>{user.name} Albums</h2>\n        <ul>\n          {albums.map((album, index) => (\n            <li key={index}>\n              {album.id} - {album.title}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n  return <p>Please click on a user name to the left</p>;\n}\n\nexport default AlbumList;\n","import React from \"react\";\n\nfunction UserList({ users, setCurrentUser }) {\n  return (\n    <ul className=\"user-list\">\n      {users.map((user) => (\n        <li key={user.id}>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setCurrentUser(user);\n            }}\n          >\n            {user.name}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default UserList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport AlbumList from \"./AlbumList\";\nimport UserList from \"./UserList\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function loadUsers() {\n      try {\n        const response = await fetch(\n          \"https://jsonplaceholder.typicode.com/users\",\n          { signal: abortController.signal }\n        );\n        const usersFromAPI = await response.json();\n        setUsers(usersFromAPI);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadUsers();\n\n    const ogTitle = document.title;\n    document.title = \"Awesome Album App\";\n\n    return () => {\n      document.title = ogTitle;\n      abortController.abort();\n    };\n  }, []);\n\n  // Load data from https://jsonplaceholder.typicode.com/albums?userId=${user.id}\n\n  return (\n    <div className=\"App\">\n      <div className=\"left column\">\n        <UserList users={users} setCurrentUser={setCurrentUser} />\n      </div>\n      <div className=\"right column\">\n        <AlbumList user={currentUser} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}